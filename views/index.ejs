<% layout('layouts/boilerplate') %>

<div class="container py-4">
    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search listings..." id="searchInput">
                <button class="btn btn-outline-primary" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
        <div class="col-md-6 text-md-end">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" id="sortDropdown">
                    Sort By
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#" data-sort="price-low">Price: Low to High</a></li>
                    <li><a class="dropdown-item" href="#" data-sort="price-high">Price: High to Low</a></li>
                  
                </ul>
            </div>
        </div>
    </div>

    <!-- Listings Grid -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <% lists.forEach(element => { %>
        <div class="col">
            <div class="card h-100 listing-card">
                <div class="position-relative">
                    <img src="<%= element.image %>" class="card-img-top listing-image" alt="<%= element.title %>">
                    <div class="position-absolute top-0 end-0 m-2">
                        <span class="badge bg-primary">Available</span>
                    </div>
                </div>
                <div class="card-body">
                    <h5 class="card-title"><%= element.title %></h5>
                    <p class="card-text text-muted">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        <%= element.location || 'Location not specified' %>
                    </p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="price">
                            <span class="text-primary fw-bold">&#8377;<%= element.price %></span>
                            <span class="text-muted">/night</span>
                        </div>
                        <div class="rating">
                            <i class="fas fa-star text-warning"></i>
                            <span class="ms-1">4.5</span>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-transparent border-top-0">
                    <a href="/listing/<%=element._id%>" class="btn btn-primary w-100">
                        <i class="fas fa-info-circle me-2"></i>View Details
                    </a>
                </div>
            </div>
        </div>
        <% }); %>
    </div>

    <!-- No Listings Message -->
    <% if (lists.length === 0) { %>
    <div class="text-center py-5">
        <i class="fas fa-home fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No listings available</h4>
        <p class="text-muted">Be the first to add a listing!</p>
        <% if (currUser) { %>
        <a href="/listing/new" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Add Listing
        </a>
        <% } %>
    </div>
    <% } %>
</div>

<style>
    /* Listing Card Styles */
    .listing-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 1rem;
        overflow: hidden;
    }

    .listing-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    .listing-image {
        height: 200px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .listing-card:hover .listing-image {
        transform: scale(1.05);
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .price {
        font-size: 1.2rem;
    }

    /* Search and Filter Styles */
    .input-group {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
    }

    .input-group .form-control {
        border: none;
        padding: 0.75rem 1rem;
    }

    .input-group .btn {
        padding: 0.75rem 1.5rem;
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
        .listing-image {
            height: 180px;
        }
    }

    @media (max-width: 576px) {
        .listing-image {
            height: 160px;
        }
    }
</style>

<script>
    // Debounce function to limit how often a function can fire
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // Search functionality with debounce
    const searchFunction = function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const listings = document.querySelectorAll('.listing-card');
        
        listings.forEach(listing => {
            const title = listing.querySelector('.card-title').textContent.toLowerCase();
            const location = listing.querySelector('.card-text').textContent.toLowerCase();
            
            if (title.includes(searchTerm) || location.includes(searchTerm)) {
                listing.closest('.col').style.display = '';
            } else {
                listing.closest('.col').style.display = 'none';
            }
        });
    };

    // Apply debounce to search function with 300ms delay
    const debouncedSearch = debounce(searchFunction, 300);

    // Add event listener with debounced search
    document.getElementById('searchInput').addEventListener('input', debouncedSearch);

    // Price sorting functionality
    function sortListings(sortType) {
        const container = document.querySelector('.row-cols-1');
        const listings = Array.from(container.querySelectorAll('.col'));
        
        listings.sort((a, b) => {
            const priceA = parseFloat(a.querySelector('.price .text-primary').textContent.replace('₹', ''));
            const priceB = parseFloat(b.querySelector('.price .text-primary').textContent.replace('₹', ''));
            
            switch(sortType) {
                case 'price-low':
                    return priceA - priceB;
                case 'price-high':
                    return priceB - priceA;
              
                default:
                    return 0;
            }
        });

        // Clear the container
        container.innerHTML = '';
        
        // Append sorted listings
        listings.forEach(listing => {
            container.appendChild(listing);
        });
    }

    // Add click event listeners to sort buttons
    document.querySelectorAll('.dropdown-item[data-sort]').forEach(item => {
        item.addEventListener('click', (e) => {
            e.preventDefault();
            const sortType = e.target.getAttribute('data-sort');
            sortListings(sortType);
            const dropdownButton = document.querySelector('#sortDropdown');
            dropdownButton.textContent = e.target.textContent;
         
        });
    });
</script>
